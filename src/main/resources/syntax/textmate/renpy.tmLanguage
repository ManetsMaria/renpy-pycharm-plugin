<?xml version='1.0' encoding='utf-8'?>
<plist version="1.0">
    <important_information>
        <![CDATA[
    This file has been converted from https://github.com/renpy/vscode-language-renpy/blob/master/syntaxes/renpy.tmLanguage.json.
    If you want to provide a fix or improvement, please create a pull request against the original repository.
    ALSO THIS FILE IS NOT FINISHED WITH ADAPTATION: renpy-python blocks not valid now
        ]]>
    </important_information>
	<dict>
		<key>fileTypes</key>
        <array>
        	<string>rpy</string>
        </array>
		<key>$schema</key>
		<string>https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json</string>
		<key>name</key>
		<string>Ren'Py</string>
		<key>scopeName</key>
		<string>source.renpy</string>
		<key>patterns</key>
		<array>
			<dict>
				<key>include</key>
				<string>#base-patterns</string>
			</dict>
		</array>
		<key>repository</key>
		<dict>
			<key>statements</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#renpy-statements</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#python-statements</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#conditionals</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#keywords</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#say-statements</string>
					</dict>
				</array>
			</dict>
			<key>expressions</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#renpy-python-expressions</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#fallback-characters</string>
					</dict>
				</array>
			</dict>
			<key>renpy-only-expressions</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#comments</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#strings</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#literal</string>
					</dict>
				</array>
			</dict>
			<key>renpy-python-expressions</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#renpy-only-expressions</string>
					</dict>
				</array>
			</dict>
			<key>invalid-token</key>
			<dict>
				<key>match</key>
				<string>.+</string>
				<key>name</key>
				<string>invalid.unknown.token.renpy</string>
			</dict>
			<key>new-line</key>
			<dict>
				<key>match</key>
				<string>\r\n|\r|\n</string>
				<key>name</key>
				<string>punctuation.new-line.renpy</string>
			</dict>
			<key>whitespace</key>
			<dict>
				<key>match</key>
				<string>[ \t]+</string>
				<key>name</key>
				<string>punctuation.whitespace.renpy</string>
			</dict>
			<key>fallback-characters</key>
			<dict>
				<key>comment</key>
				<string>NOTE: Having these patterns separated increases performance. Benchmark before making a change!</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#new-line</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#whitespace</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.parenthesis.begin.renpy</string>
						<key>match</key>
						<string>\(</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.parenthesis.end.renpy</string>
						<key>match</key>
						<string>\)</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.bracket.begin.renpy</string>
						<key>match</key>
						<string>{</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.bracket.end.renpy</string>
						<key>match</key>
						<string>}</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.square-bracket.begin.renpy</string>
						<key>match</key>
						<string>\[</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.square-bracket.end.renpy</string>
						<key>match</key>
						<string>\]</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.period.renpy</string>
						<key>match</key>
						<string>\.</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.colon.renpy</string>
						<key>match</key>
						<string>:</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.semicolon.renpy</string>
						<key>match</key>
						<string>;</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.comma.renpy</string>
						<key>match</key>
						<string>,</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.hashtag.renpy</string>
						<key>match</key>
						<string>#</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.quote.renpy</string>
						<key>match</key>
						<string>'</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.double-quote.renpy</string>
						<key>match</key>
						<string>"</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.back-quote.renpy</string>
						<key>match</key>
						<string>`</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.backslash.renpy</string>
						<key>match</key>
						<string>\\</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.forward-slash.renpy</string>
						<key>match</key>
						<string>/</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.equals-symbol.renpy</string>
						<key>match</key>
						<string>=</string>
					</dict>
					<dict>
						<key>name</key>
						<string>debug.invalid.illegal.unmatched.renpy</string>
						<key>match</key>
						<string>\b\w+\b</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.unknown.renpy</string>
						<key>match</key>
						<string>.</string>
					</dict>
				</array>
			</dict>
			<key>fallback-patterns</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#comments</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#fallback-characters</string>
					</dict>
				</array>
			</dict>
			<key>literal</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>Python literals</string>
						<key>name</key>
						<string>constant.language.renpy</string>
						<key>match</key>
						<string>\b(?&lt;!\.)(True|False|None)\b</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.python#literal</string>
					</dict>
				</array>
			</dict>
			<key>num-float</key>
			<dict>
				<key>match</key>
				<string>([\+\-])?(\d+\.?\d*|\.\d+)([eE][\-\+]?\d+)?</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.arithmetic.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.numeric.float.renpy</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>constant.numeric.float.renpy</string>
					</dict>
				</dict>
			</dict>
			<key>num-int</key>
			<dict>
				<key>name</key>
				<string>constant.numeric.integer.renpy</string>
				<key>match</key>
				<string>(?&lt;![\w.])(?:[1-9]+|0+|0([0-9]+)(?![eE.]))\b</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>invalid.illegal.integer.renpy</string>
					</dict>
				</dict>
			</dict>
			<key>parenthesised-python</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>\(</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.parenthesis.begin.python.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\)</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.parenthesis.end.python.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.renpy.python#expression</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>\[</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.square-bracket.begin.python.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\]</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.square-bracket.end.python.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.renpy.python#expression</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>\{</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.bracket.begin.python.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\}</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.bracket.end.python.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.renpy.python#expression</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>identifier</key>
			<dict>
				<key>name</key>
				<string>variable.name.renpy</string>
				<key>match</key>
				<string>\b[\p{XID_Start}_]\p{XID_Continue}*\b</string>
			</dict>
			<key>illegal-identifiers</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>invalid.illegal.identifier.renpy</string>
						<key>match</key>
						<string>\b(as|at|behind|call|expression|hide|if|in|image|init|jump|menu|onlayer|python|return|scene|show|with|while|zorder)\b</string>
					</dict>
				</array>
			</dict>
			<key>name</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#illegal-identifiers</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#identifier</string>
					</dict>
				</array>
			</dict>
			<key>simple-expression</key>
			<dict>
				<key>name</key>
				<string>meta.simple-expression.renpy</string>
				<key>begin</key>
				<string>[ \t]*</string>
				<key>end</key>
				<string>(?!\G)(?![.\[\(\{])|$</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>source.renpy.python#string</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#literal</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#num-float</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.python#member-access</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.python#function-call</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#identifier</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#parenthesised-python</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#whitespace</string>
					</dict>
				</array>
			</dict>
			<key>keywords</key>
			<dict>
				<key>comment</key>
				<string>Fallback patterns for unmatched keywords</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>Control flow keywords</string>
						<key>name</key>
						<string>keyword.control.flow.renpy</string>
						<key>match</key>
						<string>\b(?&lt;!\.)(?:pass|return|pause)\b</string>
					</dict>
					<dict>
						<key>comment</key>
						<string>Control flow keywords with block</string>
						<key>begin</key>
						<string>\b(?&lt;!\.)(?:(if|elif|else)|(for|while))\b</string>
						<key>contentName</key>
						<string>meta.embedded.line.python</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.control.conditional.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.control.flow.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>:|$</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.block.begin.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#expressions</string>
							</dict>
							<dict>
								<key>include</key>
								<string>source.renpy.python#expression</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>comment</key>
						<string>Python statement keywords</string>
						<key>match</key>
						<string>\b(?&lt;!\.)(define|default|early|hide|in|init|python)\b</string>
						<key>name</key>
						<string>keyword.other.python.renpy</string>
					</dict>
					<dict>
						<key>comment</key>
						<string>Renpy keywords</string>
						<key>match</key>
						<string>\b(?&lt;!\.)(?:camera|image|label|layeredimage|menu|nvl[ \t]+clear|play|queue|scene|screen|show|transform|translate|voice(?:[ \t]+sustain)?|window|frame)\b</string>
						<key>name</key>
						<string>keyword.other.renpy</string>
					</dict>
					<dict>
						<key>comment</key>
						<string>[TODO: Should probably only be a keyword in the expression] Renpy sub expression keywords</string>
						<key>name</key>
						<string>keyword.other.renpy</string>
						<key>match</key>
						<string>\b(?&lt;!\.)(?:set|expression|at|with|from|style_prefix|spacing|textbutton)\b</string>
					</dict>
					<dict>
						<key>comment</key>
						<string>[TODO: Should probably only be a keyword in the expression] Renpy sub expression keywords</string>
						<key>name</key>
						<string>keyword.control.flow.other.renpy</string>
						<key>match</key>
						<string>\b(?&lt;!\.)(?:action)\b</string>
					</dict>
				</array>
			</dict>
			<key>comments</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>comment.line.number-sign.renpy</string>
						<key>match</key>
						<string>(?&lt;=^[ \t]*)(#[ \t]*(?:end)?region)\b.*$</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.region</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>name</key>
						<string>comment.line.number-sign.renpy</string>
						<key>match</key>
						<string>(#)(.*)$</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>comment</key>
										<string>Code Tags</string>
										<key>match</key>
										<string>(?:\b(NOTE|XXX|HACK|FIXME|BUG|TODO)\b)</string>
										<key>captures</key>
										<dict>
											<key>1</key>
											<dict>
												<key>name</key>
												<string>keyword.codetag.notation.renpy</string>
											</dict>
										</dict>
									</dict>
								</array>
							</dict>
						</dict>
					</dict>
				</array>
			</dict>
			<key>escaped_char</key>
			<dict>
				<key>match</key>
				<string>(\\")|(\\')|(\\ )|(\\n)|(\\\\)|(\[\[)|({{)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.double-quote.python.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.quote.python.renpy</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.whitespace.python.renpy</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.newline.python.renpy</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.backslash.python.renpy</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.open.bracket.python.renpy</string>
					</dict>
					<key>7</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.open.square-bracket.python.renpy</string>
					</dict>
				</dict>
			</dict>
			<key>constant_placeholder</key>
			<dict>
				<key>comment</key>
				<string>Python value interpolation using [ ... ]</string>
				<key>name</key>
				<string>constant.other.placeholder.tags.renpy</string>
				<key>match</key>
				<string>(\[)(.*?)(\])(?![^\[]*?\])</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.character.format.placeholder.other.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.embedded.line.python</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.renpy.python#expression</string>
							</dict>
						</array>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>constant.character.format.placeholder.other.renpy</string>
					</dict>
				</dict>
			</dict>
			<key>escaped_unicode_char</key>
			<dict>
				<key>match</key>
				<string>(\\U[0-9A-Fa-f]{8})|(\\u[0-9A-Fa-f]{4})|(\\N\{[a-zA-Z ]+\})</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.character.unicode.16-bit-hex.python.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.character.unicode.32-bit-hex.python.renpy</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>constant.character.unicode.name.python.renpy</string>
					</dict>
				</dict>
			</dict>
			<key>hex_literal</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>rgb, rgba, rrggbb, rrggbbaa</string>
						<key>match</key>
						<string>(?i)#(?:[a-f0-9]{8}|[a-f0-9]{6}|[a-f0-9]{3,4})\b</string>
						<key>name</key>
						<string>constant.color.renpy</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?i)#[a-f0-9]+\b</string>
						<key>name</key>
						<string>invalid.illegal.unexpected-number-of-hex-values.renpy</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?i)(#[a-f0-9]*)?(.+?)\b</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>constant.color.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>invalid.illegal.character-not-allowed-here.renpy</string>
							</dict>
						</dict>
					</dict>
				</array>
			</dict>
			<key>strings-interior</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#new-line</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#escaped_char</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#string-tags</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#constant_placeholder</string>
					</dict>
				</array>
			</dict>
			<key>string-tags-broken</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>Valid tags without params (close required)</string>
						<key>contentName</key>
						<string>renpy.meta.${2:/downcase} meta.tagged.string.renpy</string>
						<key>begin</key>
						<string>({)\s*(u|i|b|s|plain|alt|noalt|art|rb|rt)\s*(})</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>({/)\s*(\2)\s*(})</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.end.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings-interior</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>comment</key>
						<string>Valid tags with numeric params (close required)</string>
						<key>contentName</key>
						<string>renpy.meta.${2:/downcase} meta.tagged.string.renpy</string>
						<key>begin</key>
						<string>({)\s*(alpha|cps|k)(=)(?:(\*)|(\-)|(\+))?(\d*(?:.\d+)?)\s*(})</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.Multiply.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.Minus.renpy</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.Plus.renpy</string>
							</dict>
							<key>7</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy constant.numeric.renpy</string>
							</dict>
							<key>8</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>({/)\s*(\2)\s*(})</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.end.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings-interior</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>comment</key>
						<string>Valid tags with numeric params (close required)</string>
						<key>contentName</key>
						<string>renpy.meta.${2:/downcase} meta.tagged.string.renpy</string>
						<key>begin</key>
						<string>({)\s*(size)(=)([\-+]?)(\d+)\s*(})</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy constant.numeric.integer.renpy</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>({/)\s*(\2)\s*(})</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.end.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings-interior</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>comment</key>
						<string>Valid tags with file param (close required)</string>
						<key>name</key>
						<string>meta.string.tag.${2:/downcase}.self-closing.renpy</string>
						<key>begin</key>
						<string>({)\s*(font)(=)([\w.]+)\s*(})</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy string.unquoted.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>({/)\s*(\2)\s*(})</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.end.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings-interior</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>comment</key>
						<string>Color tag</string>
						<key>contentName</key>
						<string>renpy.meta.${2:/downcase}.${4:/downcase} meta.tagged.string.renpy</string>
						<key>begin</key>
						<string>({)\s*(color|outlinecolor)(=)(#?[a-zA-Z0-9]+)\s*(})</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>#hex_literal</string>
									</dict>
								</array>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>({/)\s*(\2)\s*(})</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.end.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings-interior</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>comment</key>
						<string>a tag</string>
						<key>contentName</key>
						<string>renpy.meta.${2:/downcase} meta.tagged.string.renpy</string>
						<key>begin</key>
						<string>({)\s*(a)(=)(.*?)\s*(})</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy string.unquoted.renpy</string>
								<key>patterns</key>
								<array />
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>({/)\s*(\2)\s*(})</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.end.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings-interior</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>string-tags</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>Valid tags without params (self-closing)</string>
						<key>name</key>
						<string>meta.string.tag.${2:/downcase}.self-closing.renpy</string>
						<key>match</key>
						<string>({)\s*(nw|done|fast|p|w|clear)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Valid tags with numeric params (self-closing)</string>
						<key>name</key>
						<string>meta.string.tag.${2:/downcase}.self-closing.renpy</string>
						<key>match</key>
						<string>({)\s*(p|w)(=)(\+?)(\d*(?:.\d+)?)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.plus.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy constant.numeric.float.renpy</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Valid tags with numeric params (self-closing)</string>
						<key>name</key>
						<string>meta.string.tag.${2:/downcase}.self-closing.renpy</string>
						<key>match</key>
						<string>({)\s*(v?space)(=)(\+?)(\d+)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.plus.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy constant.numeric.integer.renpy</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Comment tag (self-closing)</string>
						<key>name</key>
						<string>meta.string.tag.comment.self-closing.renpy</string>
						<key>match</key>
						<string>({)\s*(#)\s*(.*?)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>comment.line.number-sign.renpy punctuation.definition.comment.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>comment.line.number-sign.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Valid tags with file param</string>
						<key>name</key>
						<string>meta.string.tag.${2:/downcase}.self-closing.renpy</string>
						<key>match</key>
						<string>({)\s*(image)(=)([\w.]+)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy string.unquoted.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Valid tags without params (close required)</string>
						<key>match</key>
						<string>({)\s*(u|i|b|s|plain|alt|noalt|art|rb|rt)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Valid tags with numeric params (close required)</string>
						<key>match</key>
						<string>({)\s*(alpha|cps|k)(=)(?:(\*)|(\-)|(\+))?(\d*(?:.\d+)?)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.Multiply.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.Minus.renpy</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.Plus.renpy</string>
							</dict>
							<key>7</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy constant.numeric.renpy</string>
							</dict>
							<key>8</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Valid tags with numeric params (close required)</string>
						<key>match</key>
						<string>({)\s*(size)(=)([\-+]?)(\d+)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy constant.numeric.integer.renpy</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Valid tags with file param (close required)</string>
						<key>name</key>
						<string>meta.string.tag.${2:/downcase}.self-closing.renpy</string>
						<key>match</key>
						<string>({)\s*(font)(=)([\w.]+)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy string.unquoted.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Color tag</string>
						<key>match</key>
						<string>({)\s*(color|outlinecolor)(=)(#?[a-zA-Z0-9]+)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>#hex_literal</string>
									</dict>
								</array>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>a tag</string>
						<key>match</key>
						<string>({)\s*(a)(=)(.*?)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy string.unquoted.renpy</string>
								<key>patterns</key>
								<array />
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Unknown tag (Single line support only cus \R does not work) (Since we don't know if a tag is self closing, we can't assume that an end pattern exists)</string>
						<key>match</key>
						<string>({)[ \t]*(\w+)\b(?:(=)(.*?))?\s*(})((?:.|\R)+?)\s*({/)\s*(\2)\s*(})</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy renpy.meta.u entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy constant.other.placeholder.tags.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy punctuation.definition.tag.end.renpy</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>renpy.meta.string.tag.custom.${2:/downcase} meta.tagged.string.renpy</string>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>#strings-interior</string>
									</dict>
								</array>
							</dict>
							<key>7</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.end.renpy punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>8</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.end.renpy renpy.meta.u entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>9</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.end.renpy punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Unknown tag start</string>
						<key>match</key>
						<string>({)\s*(\w*)(?:(=)(.*?))?\s*(})</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.start.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.key-value.renpy keyword.operator.assignment.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-value.renpy constant.other.placeholder.tags.renpy</string>
								<key>patterns</key>
								<array />
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Unknown tag end</string>
						<key>match</key>
						<string>({/)\s*(\w*?)\b\s*(})</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>meta.string.tag.${2:/downcase}.end.renpy</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.begin.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.tag.${2:/downcase}.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.tag.end.renpy</string>
							</dict>
						</dict>
					</dict>
				</array>
			</dict>
			<key>strings</key>
			<dict>
				<key>name</key>
				<string>string.quoted.renpy</string>
				<key>begin</key>
				<string>"""|"|'''|'|```|`</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(?&lt;![^\\]\\)(((?&lt;=\0)\0)|\0)</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.empty-string.renpy</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#strings-interior</string>
					</dict>
				</array>
			</dict>
			<key>python-statements</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>^([ \t]*)(init)[ \t]+(offset)[ \t]*(=)[ \t]*(-)?([^#]*?)$</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.whitespace.leading.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.init.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>keyword.offset.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.assignment.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.minus.renpy</string>
							</dict>
							<key>6</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>#num-int</string>
									</dict>
									<dict>
										<key>include</key>
										<string>#invalid-token</string>
									</dict>
								</array>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>comment</key>
						<string>Renpy python block</string>
						<key>contentName</key>
						<string>meta.embedded.block.python</string>
						<key>begin</key>
						<string>^([ \t]+)?(?:(init)(?:[ \t]+(-)?(\d+))?[ \t]+)?(python)[ \t]*(.*)?(:)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.whitespace.embedded.leading.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.init.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.arithmetic.minus.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>constant.numeric.integer.renpy</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>keyword.python.renpy</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>meta.python.block.arguments.renpy</string>
								<key>patterns</key>
								<array>
									<dict>
										<key>comment</key>
										<string>in statement</string>
										<key>match</key>
										<string>(?:\s*(in)\s*([a-zA-Z_]\w*)\b)</string>
										<key>captures</key>
										<dict>
											<key>1</key>
											<dict>
												<key>name</key>
												<string>keyword.control.flow.in.renpy</string>
											</dict>
											<key>2</key>
											<dict>
												<key>name</key>
												<string>entity.name.namespace</string>
											</dict>
										</dict>
									</dict>
									<dict>
										<key>comment</key>
										<string>keywords</string>
										<key>match</key>
										<string>\b(hide)|(early)|(in)\b</string>
										<key>captures</key>
										<dict>
											<key>1</key>
											<dict>
												<key>name</key>
												<string>keyword.hide.renpy</string>
											</dict>
											<key>2</key>
											<dict>
												<key>name</key>
												<string>keyword.early.renpy</string>
											</dict>
											<key>3</key>
											<dict>
												<key>name</key>
												<string>keyword.control.flow.in.renpy</string>
											</dict>
										</dict>
									</dict>
								</array>
							</dict>
							<key>7</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.python.begin.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>^(?=(?!\1)[ \t]*[^\s#]|\1[^\s#])</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.renpy.python</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>include</key>
						<string>#define</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#default-statement</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#one-line-python</string>
					</dict>
				</array>
			</dict>
			<key>define</key>
			<dict>
				<key>comment</key>
				<string>Match begin and end of python one line statements</string>
				<key>begin</key>
				<string>(?&lt;=^[ \t]*)(define)(?=[ \t])</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.define.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>$</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>Type the first name as a variable (Probably not needed, but python doesn't seem to catch it)</string>
						<key>match</key>
						<string>(?&lt;!\.)\b([a-zA-Z_]\w*)(?=\s=\s)</string>
						<key>name</key>
						<string>variable.other.renpy</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#num-int</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#strings</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.python#expression</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#fallback-characters</string>
					</dict>
				</array>
			</dict>
			<key>default-statement</key>
			<dict>
				<key>comment</key>
				<string>Match begin and end of python one line statements</string>
				<key>begin</key>
				<string>(?&lt;=^[ \t]*)(default)(?=[ \t])</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.default.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>$</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>Type the first name as a variable (Probably not needed, but python doesn't seem to catch it)</string>
						<key>match</key>
						<string>(?&lt;!\.)\b([a-zA-Z_]\w*)(?=\s=\s)</string>
						<key>name</key>
						<string>variable.other.renpy</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#strings</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.python#expression</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#whitespace</string>
					</dict>
				</array>
			</dict>
			<key>one-line-python</key>
			<dict>
				<key>comment</key>
				<string>Match begin and end of python one line statements</string>
				<key>begin</key>
				<string>(?&lt;=^[ \t]*)(\$)(?=[ \t])</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.dollar.sign.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>$</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>Type the first name as a variable (Probably not needed, but python doesn't seem to catch it)</string>
						<key>match</key>
						<string>(?&lt;!\.)\b([a-zA-Z_]\w*)(?=\s=\s)</string>
						<key>name</key>
						<string>variable.other.renpy</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#strings</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.python#expression</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#whitespace</string>
					</dict>
				</array>
			</dict>
			<key>say-statements</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>meta.say.statement.renpy</string>
						<key>contentName</key>
						<string>renpy.meta.say.$1 string.quoted.renpy</string>
						<key>begin</key>
						<string>(?&lt;=^[ \t]+)(?:([a-zA-Z_]\w*)\b|"([a-zA-Z_]\w*)\b")((?:[ \t]+(?:@|\w+))*)?[ \t]*("""|"|'''|'|```|`)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>renpy.meta.character.$1 variable.other.renpy</string>
								<key>patterns</key>
								<array>
									<dict>
										<key>match</key>
										<string>extend</string>
										<key>name</key>
										<string>keyword.extend.renpy</string>
									</dict>
									<dict>
										<key>match</key>
										<string>voice</string>
										<key>name</key>
										<string>keyword.voice.renpy</string>
									</dict>
									<dict>
										<key>comment</key>
										<string>Match special characters</string>
										<key>match</key>
										<string>adv|nvl|narrator|name_only|centered|vcentered</string>
										<key>name</key>
										<string>variable.other.constant.renpy</string>
									</dict>
								</array>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>meta.string.character.$2.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>meta.arguments.renpy</string>
								<key>patterns</key>
								<array>
									<dict>
										<key>name</key>
										<string>keyword.at.renpy</string>
										<key>match</key>
										<string>@</string>
									</dict>
								</array>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>string.quoted.renpy punctuation.definition.string.begin.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?&lt;![^\\]\\)(((?&lt;=\4)\4)|\4)[ \t]*(\(.*?\)(?![^\(]*?\)))?</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.renpy punctuation.definition.string.end.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>meta.empty-string.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>source.renpy.python#function-arguments</string>
									</dict>
								</array>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings-interior</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>name</key>
						<string>meta.say.narrator.renpy</string>
						<key>contentName</key>
						<string>string.quoted.narrator.renpy</string>
						<key>begin</key>
						<string>(?&lt;=^[ \t]+)("""|"|'''|'|```|`)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.renpy punctuation.definition.string.begin.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?&lt;![^\\]\\)(((?&lt;=\1)\1)|\1)[ \t]*(\(.*?\)(?![^\(]*?\)))?</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>string.quoted.renpy punctuation.definition.string.end.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>meta.empty-string.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>source.renpy.python#function-arguments</string>
									</dict>
								</array>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings-interior</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>pause</key>
			<dict>
				<key>match</key>
				<string>(?&lt;=^[ \t]+)(pause)\b(.+)?</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.pause.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.pause.parameters.renpy</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#simple-expression</string>
							</dict>
						</array>
					</dict>
				</dict>
			</dict>
			<key>conditionals</key>
			<dict>
				<key>match</key>
				<string>(?&lt;=^[ \t]+)(if|elif|else)\b(.*?)(:)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.conditional.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#simple-expression</string>
							</dict>
						</array>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.condition.begin.renpy</string>
					</dict>
				</dict>
			</dict>
			<key>at-statement</key>
			<dict>
				<key>name</key>
				<string>meta.at.statement.renpy</string>
				<key>match</key>
				<string>\b(?!\.)(at)\b(.+)?</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.at.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.at.parameters.renpy</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#simple-expression</string>
							</dict>
						</array>
					</dict>
				</dict>
			</dict>
			<key>as-statement</key>
			<dict>
				<key>name</key>
				<string>meta.as.statement.renpy</string>
				<key>match</key>
				<string>\b(?!\.)(as)\b[ \t]*(.+)?</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.as.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.as.parameters.renpy</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#simple-expression</string>
							</dict>
						</array>
					</dict>
				</dict>
			</dict>
			<key>with-statement</key>
			<dict>
				<key>name</key>
				<string>meta.with.statement.renpy</string>
				<key>match</key>
				<string>\b(?!\.)(with)\b(.+)?</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.with.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.with.parameters.renpy</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#simple-expression</string>
							</dict>
						</array>
					</dict>
				</dict>
			</dict>
			<key>behind</key>
			<dict>
				<key>name</key>
				<string>meta.behind.statement.renpy</string>
				<key>match</key>
				<string>\b(?!\.)(behind)\b(.+)?</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.behind.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.behind.parameters.renpy</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#simple-expression</string>
							</dict>
						</array>
					</dict>
				</dict>
			</dict>
			<key>onlayer</key>
			<dict>
				<key>name</key>
				<string>meta.onlayer.statement.renpy</string>
				<key>match</key>
				<string>\b(?!\.)(onlayer)\b(.+)?</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.onlayer.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.onlayer.parameters.renpy</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#simple-expression</string>
							</dict>
						</array>
					</dict>
				</dict>
			</dict>
			<key>zorder</key>
			<dict>
				<key>name</key>
				<string>meta.zorder.statement.renpy</string>
				<key>match</key>
				<string>\b(?!\.)(zorder)\b(.+)?</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.zorder.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.zorder.parameters.renpy</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#simple-expression</string>
							</dict>
						</array>
					</dict>
				</dict>
			</dict>
			<key>image</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>meta.image.statement.renpy</string>
						<key>contentName</key>
						<string>meta.atl-block.renpy</string>
						<key>begin</key>
						<string>^([ \t]+)?(image)\b[ \t]*([a-zA-Z_0-9 ]*)(:)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.whitespace.leading.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.image.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>entity.name.type.image.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.atl.begin.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>^(?=(?!\1)[ \t]*[^\s#]|\1[^\s#])</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.renpy.atl</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>name</key>
						<string>meta.image.statement.renpy</string>
						<key>begin</key>
						<string>(?&lt;=^[ \t]*)(image)\b[ \t]*</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.image.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=\b(at)\b|#|=)|$</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings</string>
							</dict>
							<dict>
								<key>match</key>
								<string>\b(?:[a-zA-Z_0-9]+)\b[ \t]*</string>
								<key>name</key>
								<string>entity.name.type.image.renpy</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>include</key>
						<string>#at-statement</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#with-statement</string>
					</dict>
				</array>
			</dict>
			<key>show</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>meta.show.statement.renpy</string>
						<key>contentName</key>
						<string>meta.atl-block.renpy</string>
						<key>begin</key>
						<string>^([ \t]+)?(show)\b[ \t]*([a-zA-Z_0-9 ]*)(:)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.whitespace.leading.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.show.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>entity.name.type.image.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.atl.begin.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>^(?=(?!\1)[ \t]*[^\s#]|\1[^\s#])</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.renpy.atl</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>name</key>
						<string>meta.show.statement.renpy</string>
						<key>begin</key>
						<string>(?&lt;=^[ \t]*)(show)\b[ \t]*</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.show.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=\b(at|as|behind|onlayer|expression|with|zorder)\b|#)|$</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings</string>
							</dict>
							<dict>
								<key>match</key>
								<string>\b(?:[a-zA-Z_0-9]+)\b[ \t]*</string>
								<key>name</key>
								<string>entity.name.type.image.renpy</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>include</key>
						<string>#at-statement</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#as-statement</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#with-statement</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#behind</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#onlayer</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#zorder</string>
					</dict>
				</array>
			</dict>
			<key>scene</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>meta.scene.statement.renpy</string>
						<key>contentName</key>
						<string>meta.atl-block.renpy</string>
						<key>begin</key>
						<string>^([ \t]+)?(scene)\b[ \t]*([a-zA-Z_0-9 ]*)(:)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.whitespace.leading.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.scene.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>entity.name.type.image.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.atl.begin.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>^(?=(?!\1)[ \t]*[^\s#]|\1[^\s#])</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.renpy.atl</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>name</key>
						<string>meta.scene.statement.renpy</string>
						<key>begin</key>
						<string>(?&lt;=^[ \t]*)(scene)\b[ \t]*</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.scene.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=\b(at|as|behind|onlayer|expression|with|zorder)\b|#)|$</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings</string>
							</dict>
							<dict>
								<key>match</key>
								<string>\b(?:[a-zA-Z_0-9]+)\b[ \t]*</string>
								<key>name</key>
								<string>entity.name.type.image.renpy</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>include</key>
						<string>#at-statement</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#as-statement</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#with-statement</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#behind</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#onlayer</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#zorder</string>
					</dict>
				</array>
			</dict>
			<key>camera</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>meta.camera.statement.renpy</string>
						<key>contentName</key>
						<string>meta.atl-block.renpy</string>
						<key>begin</key>
						<string>^([ \t]+)?(camera)\b[ \t]*(:)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.whitespace.leading.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.camera.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>entity.name.type.image.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.atl.begin.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>^(?=(?!\1)[ \t]*[^\s#]|\1[^\s#])</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.renpy.atl</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>name</key>
						<string>meta.camera.statement.renpy</string>
						<key>begin</key>
						<string>(?&lt;=^[ \t]*)(camera)\b[ \t]*</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.camera.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=\b(at|with)\b|#)|$</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>match</key>
								<string>\b(?:[a-zA-Z_0-9]+)\b[ \t]*</string>
								<key>name</key>
								<string>entity.name.type.image.renpy</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>include</key>
						<string>#at-statement</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#with-statement</string>
					</dict>
				</array>
			</dict>
			<key>style-property</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>support.constant.property-key.renpy entity.name.tag.css.style.renpy</string>
						<key>match</key>
						<string>\b(?&lt;!\.)((?:selected_)?(?:hover_|idle_|insensitive_|activate_)?(?:activate_sound|adjust_spacing|aft_bar|aft_gutter|align|alt|altruby_style|anchor|antialias|area|background|bar_invert|bar_resizing|bar_vertical|base_bar|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_first_spacing|box_layout|box_reverse|box_spacing|box_wrap|box_wrap_spacing|caret|child|clipping|color|debug|drop_shadow|drop_shadow_color|enable_hover|first_indent|first_spacing|fit_first|focus_mask|focus_rect|font|fore_bar|fore_gutter|foreground|hinting|hover_sound|hyperlink_functions|italic|justify|kerning|key_events|keyboard_focus|language|layout|left_bar|left_gutter|left_margin|left_padding|line_leading|line_overlap_split|line_spacing|margin|maximum|min_width|minimum|minwidth|mipmap|modal|mouse|newline_indent|offset|order_reverse|outline_scaling|outlines|padding|pos|rest_indent|right_bar|right_gutter|right_margin|right_padding|ruby_style|size|size_group|slow_abortable|slow_cps|slow_cps_multiplier|slow_speed|sound|spacing|strikethrough|subpixel|subtitle_width|text_align|text_y_fudge|textalign|thumb|thumb_offset|thumb_shadow|time_policy|top_bar|top_gutter|top_margin|top_padding|underline|unscrollable|vertical|xalign|xanchor|xcenter|xfill|xfit|xmargin|xmaximum|xminimum|xoffset|xpadding|xpos|xsize|xspacing|xysize|yalign|yanchor|ycenter|yfill|yfit|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|yspacing))\b</string>
					</dict>
					<dict>
						<key>comment</key>
						<string>Any other tokens are invalid</string>
						<key>match</key>
						<string>.+</string>
						<key>name</key>
						<string>invalid.illegal.style-property.name.renpy</string>
					</dict>
				</array>
			</dict>
			<key>style-clause</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>\b(?&lt;!\.)(is)\b[ \t]*(\w*)</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.is.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.type.style.parent.renpy</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>match</key>
						<string>\b(?&lt;!\.)clear\b</string>
						<key>name</key>
						<string>keyword.clear.renpy</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\b(?&lt;!\.)(take)\b[ \t]*(\w*)</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.take.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>#name</string>
									</dict>
								</array>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>match</key>
						<string>\b(?&lt;!\.)(del)\b[ \t]*(\w*)</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.del.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>#style-property</string>
									</dict>
								</array>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>\b(?&lt;!\.)(variant)\b</string>
						<key>end</key>
						<string>(?!\G)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.variant.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#simple-expression</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>\b(?&lt;!\.)((?:selected_)?(?:hover_|idle_|insensitive_|activate_)?(?:activate_sound|adjust_spacing|aft_bar|aft_gutter|align|alt|altruby_style|anchor|antialias|area|background|bar_invert|bar_resizing|bar_vertical|base_bar|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_first_spacing|box_layout|box_reverse|box_spacing|box_wrap|box_wrap_spacing|caret|child|clipping|color|debug|drop_shadow|drop_shadow_color|enable_hover|first_indent|first_spacing|fit_first|focus_mask|focus_rect|font|fore_bar|fore_gutter|foreground|hinting|hover_sound|hyperlink_functions|italic|justify|kerning|key_events|keyboard_focus|language|layout|left_bar|left_gutter|left_margin|left_padding|line_leading|line_overlap_split|line_spacing|margin|maximum|min_width|minimum|minwidth|mipmap|modal|mouse|newline_indent|offset|order_reverse|outline_scaling|outlines|padding|pos|rest_indent|right_bar|right_gutter|right_margin|right_padding|ruby_style|size|size_group|slow_abortable|slow_cps|slow_cps_multiplier|slow_speed|sound|spacing|strikethrough|subpixel|subtitle_width|text_align|text_y_fudge|textalign|thumb|thumb_offset|thumb_shadow|time_policy|top_bar|top_gutter|top_margin|top_padding|underline|unscrollable|vertical|xalign|xanchor|xcenter|xfill|xfit|xmargin|xmaximum|xminimum|xoffset|xpadding|xpos|xsize|xspacing|xysize|yalign|yanchor|ycenter|yfill|yfit|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|yspacing))\b</string>
						<key>end</key>
						<string>(?!\G)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.constant.property-key.renpy entity.name.tag.css.style.renpy</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#simple-expression</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>include</key>
						<string>#fallback-patterns</string>
					</dict>
				</array>
			</dict>
			<key>style</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>meta.style.statement.renpy</string>
						<key>contentName</key>
						<string>meta.style-block.renpy</string>
						<key>begin</key>
						<string>^([ \t]+)?(style)\b[ \t]*(\w*)(.*)(:)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.whitespace.leading.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>storage.type.style.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>entity.name.type.style.renpy</string>
							</dict>
							<key>4</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>#style-clause</string>
									</dict>
								</array>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.style.begin.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>^(?=(?!\1)[ \t]*[^\s#]|\1[^\s#])</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#style-clause</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>comment</key>
						<string>`style` is not considered an illegal identifier, so we need to make sure it's not followed by a `.`</string>
						<key>name</key>
						<string>meta.style.statement.renpy</string>
						<key>begin</key>
						<string>(?&lt;=^[ \t]*)(style)\b(?!\.)[ \t]*(\w*)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>storage.type.style.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.type.style.renpy</string>
							</dict>
						</dict>
						<key>end</key>
						<string>$</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#style-clause</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>use-old</key>
			<dict>
				<key>match</key>
				<string>^\s*(use)\s+([a-zA-Z_][a-zA-Z_0-9]*)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.python.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.class.python.renpy.screen.renpy</string>
					</dict>
				</dict>
			</dict>
			<key>builtin-labels</key>
			<dict>
				<key>name</key>
				<string>support.function.builtin.renpy</string>
				<key>match</key>
				<string>(?&lt;!\.)\b(?:start|quit|after_load|splashscreen|before_main_menu|main_menu|after_warp|hide_windows)\b</string>
			</dict>
			<key>label-name</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>source.renpy.python#builtin-possible-callables</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#builtin-labels</string>
					</dict>
					<dict>
						<key>name</key>
						<string>entity.name.function.label.renpy</string>
						<key>match</key>
						<string>\b(?:[a-zA-Z_]\w*)\b</string>
					</dict>
				</array>
			</dict>
			<key>label-call</key>
			<dict>
				<key>comment</key>
				<string>Note: label params are only allowed at the end of the access expression</string>
				<key>name</key>
				<string>meta.function-call.label.renpy</string>
				<key>begin</key>
				<string>\b(?=([a-zA-Z_]\w*)\s*(\())</string>
				<key>end</key>
				<string>(\))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.arguments.end.renpy</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>source.renpy.python#special-variables</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#label-name</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.python#function-arguments</string>
					</dict>
				</array>
			</dict>
			<key>label-access</key>
			<dict>
				<key>comment</key>
				<string>Note: Labels can't be nested twice in a row!</string>
				<key>name</key>
				<string>meta.member.access.label.renpy</string>
				<key>begin</key>
				<string>(\.)\s*(?!\.)</string>
				<key>end</key>
				<string>(?&lt;=\S)(?=\W)|(^|(?&lt;=\s))(?=[^\\\w\s])|$</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.separator.period.renpy</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#label-call</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#label-name</string>
					</dict>
				</array>
			</dict>
			<key>label-def-name</key>
			<dict>
				<key>comment</key>
				<string>Note: Labels can't be nested twice in a row!</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>source.renpy.python#builtin-possible-callables</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#builtin-labels</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?&lt;=^|[ \t])(\b(?:[a-zA-Z_]\w*)\b)?(\.)?(\b(?:[a-zA-Z_]\w*)\b)</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>entity.name.function.label.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>punctuation.separator.period.renpy</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>entity.name.function.label.renpy</string>
							</dict>
						</dict>
					</dict>
				</array>
			</dict>
			<key>label</key>
			<dict>
				<key>name</key>
				<string>meta.label.statement.renpy</string>
				<key>match</key>
				<string>(?&lt;=^[ \t]*)(label)\b[ \t]*(.*?)(?:[ \t]*(hide))?(:)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.label.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#label-def-name</string>
							</dict>
							<dict>
								<key>include</key>
								<string>source.renpy.python#parameters</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#invalid-token</string>
							</dict>
						</array>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>keyword.hide.renpy</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.label.begin.renpy</string>
					</dict>
				</dict>
			</dict>
			<key>return-statements</key>
			<dict>
				<key>begin</key>
				<string>(?&lt;=^[ \t]+)(return)\b[ \t]*</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.return.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>$</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#renpy-only-expressions</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.python#expression</string>
					</dict>
				</array>
			</dict>
			<key>call-jump-expression</key>
			<dict>
				<key>begin</key>
				<string>\b(?&lt;!\.)(expression)\b</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.expression.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(?=\b(?&lt;!\.)(?:pass|from)\b)|$</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#renpy-only-expressions</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.python#expression</string>
					</dict>
				</array>
			</dict>
			<key>jump</key>
			<dict>
				<key>name</key>
				<string>meta.jump.statement.renpy</string>
				<key>begin</key>
				<string>(?&lt;=^[ \t]+)(jump)\b[ \t]*</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.jump.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(?=#)|$</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>invalid.illegal.renpy</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#call-jump-expression</string>
					</dict>
					<dict>
						<key>comment</key>
						<string>Label expression</string>
						<key>begin</key>
						<string>(?=[a-zA-Z_.])</string>
						<key>end</key>
						<string>(?![a-zA-Z_.])(?![ \t]*\.[ \t]*)</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#label-access</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#label-name</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>call-pass</key>
			<dict>
				<key>begin</key>
				<string>\b(?&lt;!\.)(pass)\b[ \t]*(?=\()</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.pass.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(\))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.arguments.end.renpy</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>source.renpy.python#function-arguments</string>
					</dict>
				</array>
			</dict>
			<key>call-from</key>
			<dict>
				<key>begin</key>
				<string>\b(?&lt;!\.)(from)\b[ \t]*</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.from.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(?=\W|$)</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#label-name</string>
					</dict>
				</array>
			</dict>
			<key>call</key>
			<dict>
				<key>name</key>
				<string>meta.call.statement.renpy</string>
				<key>begin</key>
				<string>(?&lt;=^[ \t]+)(call)\b(?:[ \t]+(screen))?</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.flow.call.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>keyword.screen.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(?=#)|$</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>invalid.illegal.renpy</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#call-jump-expression</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#call-pass</string>
					</dict>
					<dict>
						<key>comment</key>
						<string>Label expression</string>
						<key>begin</key>
						<string>(?=[a-zA-Z_.])</string>
						<key>end</key>
						<string>(?![a-zA-Z_.])(?![ \t]*\.[ \t]*)</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#label-call</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#label-access</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#label-name</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>include</key>
						<string>#call-from</string>
					</dict>
				</array>
			</dict>
			<key>menu-option</key>
			<dict>
				<key>contentName</key>
				<string>meta.menu-option.block.renpy</string>
				<key>begin</key>
				<string>^([ \t]+)?((?:".*")|(?:'.*')|(?:""".*"""))[ \t]*(.+)?(:)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.whitespace.menu-option.leading.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.menu-option.renpy</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings</string>
							</dict>
						</array>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>meta.embedded.line.python</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.renpy.python#function-arguments</string>
							</dict>
							<dict>
								<key>comment</key>
								<string>if condition</string>
								<key>match</key>
								<string>\b(if)[ \t]+(.+)?</string>
								<key>captures</key>
								<dict>
									<key>1</key>
									<dict>
										<key>name</key>
										<string>keyword.control.conditional.renpy</string>
									</dict>
									<key>2</key>
									<dict>
										<key>patterns</key>
										<array>
											<dict>
												<key>include</key>
												<string>source.renpy.python#expression-bare</string>
											</dict>
										</array>
									</dict>
								</dict>
							</dict>
							<dict>
								<key>match</key>
								<string>[^ \t]+</string>
								<key>name</key>
								<string>invalid.illegal.unexpected-characters-in-menu-arguments.renpy</string>
							</dict>
						</array>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.menu-option.begin.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>^(?=(?!\1)[ \t]*[^\s#]|\1[^\s#])</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#base-patterns</string>
					</dict>
				</array>
			</dict>
			<key>menu-set</key>
			<dict>
				<key>match</key>
				<string>(?&lt;=^[ \t]+)(set)[ \t]+(.+)?</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.set.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.embedded.line.python</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.renpy.python#expression-bare</string>
							</dict>
						</array>
					</dict>
				</dict>
			</dict>
			<key>menu</key>
			<dict>
				<key>name</key>
				<string>meta.menu.statement.renpy</string>
				<key>contentName</key>
				<string>meta.menu.block.renpy</string>
				<key>begin</key>
				<string>^([ \t]+)?(menu)[ \t]*(.+)?(:)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.whitespace.menu.leading.renpy</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.renpy</string>
					</dict>
					<key>3</key>
					<dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>comment</key>
								<string>Menu name</string>
								<key>match</key>
								<string>[a-zA-Z_.]\w*</string>
								<key>name</key>
								<string>entity.name.function.menu.renpy</string>
							</dict>
							<dict>
								<key>include</key>
								<string>source.renpy.python#function-arguments</string>
							</dict>
						</array>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.menu.begin.renpy</string>
					</dict>
				</dict>
				<key>end</key>
				<string>^(?=(?!\1)[ \t]*[^\s#]|\1[^\s#])</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#comments</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#menu-option</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#say-statements</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#menu-set</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#fallback-characters</string>
					</dict>
				</array>
			</dict>
			<key>builtin-audio-channels</key>
			<dict>
				<key>name</key>
				<string>support.type.audio.channel.renpy</string>
				<key>match</key>
				<string>(?&lt;!\.)\b(?:music|sound|voice|audio)\b</string>
			</dict>
			<key>audio-channel</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#builtin-audio-channels</string>
					</dict>
					<dict>
						<key>match</key>
						<string>.+</string>
						<key>name</key>
						<string>entity.name.type.audio.channel.renpy</string>
					</dict>
				</array>
			</dict>
			<key>audio-params</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>keyword.other.audio.renpy</string>
						<key>match</key>
						<string>\b(?&lt;!\.)(?:fadeout|fadein|volume|loop|noloop)\b</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.python#number</string>
					</dict>
				</array>
			</dict>
			<key>play</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>meta.play.audio.statement.renpy</string>
						<key>begin</key>
						<string>(?&lt;=^[ \t]*)(play)\b[ \t]+\b([a-zA-Z_0-9]*)\b[ \t]*</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.play.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>#audio-channel</string>
									</dict>
								</array>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=[ \t]*#)|$</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#audio-params</string>
							</dict>
							<dict>
								<key>include</key>
								<string>source.renpy.python#expression</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>queue</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>meta.queue.audio.statement.renpy</string>
						<key>begin</key>
						<string>(?&lt;=^[ \t]*)(queue)\b[ \t]+\b([a-zA-Z_0-9]*)\b[ \t]*</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.queue.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>#audio-channel</string>
									</dict>
								</array>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=[ \t]*#)|$</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#audio-params</string>
							</dict>
							<dict>
								<key>include</key>
								<string>source.renpy.python#expression</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>stop</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>meta.stop.audio.statement.renpy</string>
						<key>begin</key>
						<string>(?&lt;=^[ \t]*)(stop)\b[ \t]+\b([a-zA-Z_0-9]*)\b[ \t]*</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.stop.renpy</string>
							</dict>
							<key>2</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>#audio-channel</string>
									</dict>
								</array>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=[ \t]*#)|$</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>name</key>
								<string>keyword.fadeout.renpy</string>
								<key>match</key>
								<string>\b(?&lt;!\.)(?:fadeout)\b</string>
							</dict>
							<dict>
								<key>include</key>
								<string>source.renpy.python#number</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>audio</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#play</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#queue</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#stop</string>
					</dict>
				</array>
			</dict>
			<key>renpy-statements</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#label</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#menu</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#image</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#audio</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#pause</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#style</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.atl#transform</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#scene</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#camera</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#show</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#with-statement</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#use-old</string>
					</dict>
					<dict>
						<key>include</key>
						<string>source.renpy.screen#screen</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#return-statements</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#jump</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#call</string>
					</dict>
				</array>
			</dict>
			<key>base-patterns</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#statements</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#expressions</string>
					</dict>
				</array>
			</dict>
		</dict>
	</dict>
</plist>